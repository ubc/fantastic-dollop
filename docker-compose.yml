version: '3'

# MAINTENANCE NOTE
# node-fibers, a dependency put in by `vue create`, only works with node 8 or 10
# node 8 EOL is 2019-12-31, so we're not using it
# node 10 EOL is 2021-04-01, gives us a bit more room

services:
  ui:
    build: ui/
    working_dir: /home/node/app
    volumes:
      - ./ui/:/home/node/app
    command: "yarn serve"
    labels:
      - "traefik.frontend.rule=HostRegexp:{catchall:.*}"
      - "traefik.frontend.priority=1" # lowest priority
      - "traefik.port=8080"
  api:
    # Not using a stock image, building our own that includes build tools 
    # so we can install packages from pip. The build tools aren't necessary for
    # prod images.
    build:
      context: api/
      dockerfile: docker/development/Dockerfile
    # overrides the default startup to enable live reload when code changes.
    command: "/start-reload.sh"
    # mount the python source inside the container so that when you change
    # the source code, the change is reflected instantly.
    volumes:
      - ./api/:/app
    # python exceptions will kill the container, so have the container restart
    # automatically or every mistake we make will require a manual restart
    restart: always
    labels:
      - "traefik.frontend.rule=PathPrefixStrip:/api"
    ports:
      - "5001:80"
    depends_on:
      - api_db
    environment:
      - DB_USER=api_db
      - DB_PASSWORD=api_db
      - DB_HOST=api_db
      - DB_NAME=api_db
  api_db:
    image: "postgres:11-alpine"
    volumes:
      - api_db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=api_db
      - POSTGRES_PASSWORD=api_db
  api_db_gui:
    image: "adminer:4"
    ports:
      - "5003:8080"
    depends_on:
      - api_db
    environment:
      - ADMINER_DEFAULT_SERVER=api_db
  # to avoid CORS errors, we throw a reverse proxy in front of the ui and api
  proxy:
    image: "traefik:1.7-alpine" # The official Traefik docker image
    command: --api --docker # Enables the web UI and tells Traefik to listen to docker
    ports:
      - "5000:80"     # The HTTP port
      - "5002:8080" # The Web UI (enabled by --api)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events

volumes:
  api_db_data:

